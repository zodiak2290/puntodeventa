/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PrincipalCliente.java
 *
 * Created on 17-ago-2013, 19:22:51
 */

package puntodeventa.admin.PrincipalAdmin;
import java.awt.Dimension;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import puntodeventa.inicio.EleccionLogin;
import javax.swing.JOptionPane.*;
import puntodeventa.inicio.conexioninicio;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author alberto
 */
public class MostrarAdmin extends javax.swing.JFrame {
 private Dimension dim;
    /** Creates new form PrincipalCliente */
    public MostrarAdmin()  {
        initComponents();
        this.setSize(1200, 350);
        this.setLocationRelativeTo(null); //Centra la ventana Splash
      
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablasm = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administrador");

        jButton1.setText("Mostrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tablasm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Curp", "Nombre", "Apellido Paterno", "Apellido Materno", "Calle", "Colonia", "Numero", "Municipio", "Email", "Fecha Nacimiento", "Nick", "Contrase√±a", "Fecha de registro"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablasm);

        jScrollPane2.setViewportView(jScrollPane1);

        jMenu1.setText("Archivo");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1245, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(379, 379, 379)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
conexioninicio ci = new conexioninicio();
        try {
            Class.forName("org.gjt.mm.mysql.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AgregarAdministrador.class.getName()).log(Level.SEVERE, null, ex);
        }
        Connection con=null;

        try{
          
             con=(Connection) DriverManager.getConnection(ci.getURl(), ci.getLogin(), ci.getPassword());
            DefaultTableModel modelo = new DefaultTableModel();

       this.tablasm.setModel(modelo);
      
       Statement stmt=(Statement) con.createStatement();

    ResultSet rs= (ResultSet) stmt.executeQuery( "Select curp as Curp,nombre as Nombre,apPat as 'Apellido Paterno' ,apMat as 'Apellido Materno',calle as Calle,colonia as Colonia,numExt as Numero,municipio as Municipio ,email as Email,idadmon as Nick,numTel as Telefono ,fechainicio AS 'Fecha Registro',nombreest  as Estado"+
 "  from persona natural join admin natural join estado");
     ResultSetMetaData rsMd=(ResultSetMetaData) rs.getMetaData();
    //La cantidad de columnas que tiene la consulta
    int cantidadColumnas=rsMd.getColumnCount();
  
    for(int i=1;i<=cantidadColumnas; i++){
         modelo.addColumn(rsMd.getColumnLabel(i));     
        }
    while(rs.next()){
    Object[] fila=new Object[cantidadColumnas];
    for(int i=0;i<cantidadColumnas;i++){

    fila[i]=rs.getObject(i+1);
    }
    modelo.addRow(fila);
    }
    rs.close();
    con.close();
        }
        catch(SQLException e)
        {
            if(con!=null)
            {
                try {
                    con.rollback();
                } catch (SQLException ex) {
                    Logger.getLogger(AgregarAdministrador.class.getName()).log(Level.SEVERE, null, ex);
                }
               JOptionPane.showMessageDialog(null,e.getMessage(),"Error",
JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public  void MostrarPirncipaladmin() {
        java.awt.EventQueue.invokeLater(new Runnable() {

           public void run() {

                new MostrarAdmin().setVisible(true);
            }
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablasm;
    // End of variables declaration//GEN-END:variables

}
